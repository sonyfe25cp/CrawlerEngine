===================================
XpathExtractor - 基于xpath的网页抽取
===================================

Version: 2.0.0
Author: 林爽
E-mail：83833224@qq.com
Package：bit.crawl.extractor.xpath
API: 抽象类PageExtractor，使用其子类NewsExtractor,ForumExtractor,
	 注意这两个类的输出略有不同，不同处在demo中有说明。
Method: PageExtractor.extrat(File f, String charset),
		PageExtractor.extrat(String fileContent)
		输出<标签-内容>对或者<标签+id-内容>对  HashMap<String, String>

===================================

使用：
demo例子在bit.crawl.extractor.xpath.Demo
具体注释已有

===================================

配置：
个人建议将原本的配置简化，数据库部分分离开；

（A） 新闻类网页的配置。
	下例是bit.crawl.extractor.xpath.sina.xml的内容，配置该文件能够对新浪新闻进行抽取：
<?xml version="1.0" encoding="UTF-8"?>
<!--根元素为rule-->
<rule>
	<!--子元素需要由标签名和标签体表示抽取的元素和对应的xpath
		例如title为元素名，//*[@id='artibodyTitle']为对应的xpath
		元素名可自由定义，xpath需要准确给予
	-->
	<title>//*[@id='artibodyTitle']</title>
	<ref>//*[@id='art_source']/a</ref>
	<body>//*[@id='artibody']/p</body>
	<publictime>//*[@id='pub_date']</publictime>
	<reply>.//*[@id='comment_t_show1']/a/span</reply>
</rule>

（B） 论坛类网页的配置。
	下例是bit.crawl.extractor.xpath.bitpt.xml的内容，配置该文件能够对急速论坛进行抽取：
<?xml version="1.0" encoding="UTF-8"?>
<rule>
	<!--不同点在于论坛的配置文件必须在配置文件最初就给出一个名为mainframe的元素。
		我们将每一个论坛网页视为多个框的组成，mainframe里面的xpath指定了这些框。
	-->
	<mainframe>.//*[@id]/tbody</mainframe>
	<!--其余元素同新闻类
	-->
	<username>.//tr[1]/td[1]/div[1]/a/font</username>
	<content>.//tr/td/div/div/div/table/tbody/tr/td</content>
</rule>